//{ Driver Code Starts
//

#include<bits/stdc++.h>
using namespace std;

struct Node
{
	int data;
	struct Node *left;
	struct Node *right;
	
	Node(int x){
	    data = x;
	    left = NULL;
	    right = NULL;
	}
};


void printPostOrder(Node *root)
{
	if(root==NULL)
		return;
	printPostOrder(root->left);
	printPostOrder(root->right);
	cout<<root->data<<" ";
}

// } Driver Code Ends

/*Complete the code here.
Node is as follows:
struct Node
{
  int data;
  Node* left;
  Node* right;
};
*/
class Solution{
    public:
    int idx=0;
    int search(int in[],int a,int b,int x)
    {
        for(int i=a;i<=b;i++)
        if(in[i]==x)
        return i;
        return -1;
    }
    Node *func(int in[],int pre[],int i,int j)
    {
        if(i>j)
        return NULL;
        int curr=pre[idx];
        Node *x = new Node(curr);
        idx++;
        if(i==j)
            return x;
        int s=search(in,i,j,curr);
        x->left = func(in,pre,i,s-1);
        x->right = func(in,pre,s+1,j);
        return x;
    }
    Node* buildTree(int in[],int pre[], int n)
    {
        // Code here
        return func(in,pre,0,n-1);
    }
};

//{ Driver Code Starts.
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		
		int inorder[n], preorder[n];
		for(int i=0; i<n; i++)
			cin>> inorder[i];
		for(int i=0; i<n; i++)
			cin>> preorder[i];
		Solution obj;
		Node *root = obj.buildTree(inorder, preorder, n);
		printPostOrder(root);
		cout<< endl;
	}
}

// } Driver Code Ends
