//{ Driver Code Starts
// Initial Template for c++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int palindromicPartition(string str)
    {
        // code her
        int n=str.length();
        vector<vector<bool>> dp(n,vector<bool>(n,false));
        for(int i=0;i<n;i++)
        {
            int p=0;
            for(int j=i;j<n;j++)
            {
                if(p==j)
                dp[p][j]=true;
                else if(p+1==j)
                {
                    if(str[p]==str[j])
                    dp[p][j]=true;
                }
                else
                {
                    if(str[p]==str[j])
                    dp[p][j] = dp[p+1][j-1];
                }
                p++;
            }
        }
        
        vector<int> ans(n);
        for(int i=0;i<n;i++)
        {
            if(i==0)
            ans[i]=0;
            else if(i==1)
            {
                if(str[0]==str[1])
                ans[i]=0;
                else
                ans[i]=1;
            }
            else{
                int l=i,r=i;
                int a=INT_MAX;
                while(l>=0)
                {
                    if(dp[l][r])
                    {
                        if(l==0)
                        a=0;
                        else
                        a = min(a,ans[l-1]+1);
                    }
                    l--;
                }
                ans[i]=a;
            }
            
        }
        
        return ans[n-1];
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        string str;
        cin>>str;
        
        Solution ob;
        cout<<ob.palindromicPartition(str)<<"\n";
    }
    return 0;
}
// } Driver Code Ends
