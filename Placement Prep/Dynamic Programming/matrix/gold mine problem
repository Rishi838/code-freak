//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int maxGold(int n, int m1, vector<vector<int>> m)
    {
            vector<vector<int>> dp(n,vector<int>(m1,0));
            int ans=INT_MIN;
            for(int j=0;j<m1;j++)
            {
                for(int i=0;i<n;i++)
                {
                    if(j==0)
                    {
                        dp[i][j]=m[i][j];
                    }
                    else if(i==0 && i==n-1)
                    {
                        dp[i][j] = m[i][j] + dp[i][j-1];
                    }
                    else if(i==0){
                        dp[i][j] = m[i][j] + max(dp[i][j-1],dp[i+1][j-1]);
                    }
                    else if(i==n-1)
                    {
                         dp[i][j] = m[i][j] + max(dp[i-1][j-1],dp[i][j-1]);
                    }
                    else{
                      dp[i][j] = m[i][j] + max(dp[i-1][j-1],max(dp[i][j-1],dp[i+1][j-1]));  
                    }
                    
                    if(j==m1-1)
                    {
                        ans = max(ans,dp[i][j]);
                    }
                }
            }
            
           
            return ans;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n, m;
        cin>>n>>m;
        vector<vector<int>> M(n, vector<int>(m, 0));
        for(int i = 0;i < n;i++){
            for(int j = 0;j < m;j++)
                cin>>M[i][j];
        }
        
        Solution ob;
        cout<<ob.maxGold(n, m, M)<<"\n";
    }
    return 0;
}
// } Driver Code Ends
