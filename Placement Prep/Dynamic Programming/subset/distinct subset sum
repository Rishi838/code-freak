//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
public:
	vector<int> DistinctSum(vector<int>nums){
	    // Code here
	    int sum=0;
	    for(auto i:nums)
	    sum += i;
	    int n=nums.size();
	    vector<vector<bool>> v(n+1,vector<bool>(sum+1,0));
	    vector<int> ans;
	    for(int i=0;i<=n;i++)
	    {
	        
	        for(int j=0;j<=sum;j++)
	        {
	           if(j==0)
	           v[i][j]=1;
	           else if(i==0)
	           v[i][j]=0;
	           else if(nums[i-1]>j)
	           v[i][j] = v[i-1][j];
	           else
	           v[i][j] = v[i-1][j] || v[i-1][j-nums[i-1]];
	           if(i==n && v[i][j])
	           ans.push_back(j);
	        }
	    }
	    return ans;
	    
	}
};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n;
		cin >> n;
		vector<int>nums(n);
		for(int i = 0; i < n; i++)cin >> nums[i];
		Solution obj;
		vector<int> ans = obj.DistinctSum(nums);
		for(auto i: ans)cout << i << " ";
		cout << "\n";
	}
	return 0;
}

// } Driver Code Ends
