//{ Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//Back-end complete function Template for C++

class Solution {
  public:
    int findTargetSumWays(vector<int>&A ,int target) {
        //Your code here
        int sum=0,c=0,b=A.size();
        for(int i=0;i<b;i++)
        {
        if(A[i]==0)
        c++;
        sum += A[i];
        }    
        if(sum==0)
        {
            if(target==0)
            return pow(2,c);
            else
            return 0;
        }
        if((sum+target)%2)
        return 0;
        int a= (sum + target)/2;
        vector<vector<int>> dp(b+1,vector<int>(a+1,0));
        for(int i=0;i<=b;i++)
        {
            for(int j=0;j<=a;j++)
            {
                if(j==0)
                dp[i][j]=1;
                else if(i==0)
                dp[i][j]=0;
                else if(A[i-1]==0 || A[i-1]>j)
                dp[i][j]=dp[i-1][j];
                else
                dp[i][j] = dp[i-1][j] + dp[i-1][j-A[i-1]];
                
            }
        }
        return dp[b][a]*(pow(2,c));
        
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        
        cin>>N;
        vector<int>arr(N);
        
        for(int i=0 ; i<N ; i++){
            cin>>arr[i];
        }
        int target;
        cin >> target;

        Solution ob;
        cout<<ob.findTargetSumWays(arr,target);
        cout<<"\n";
    }
    return 0;
}
// } Driver Code Ends
