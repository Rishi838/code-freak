//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    // Function to return Breadth First Traversal of given graph.
    vector<int> bfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        queue<int> q;
        vector<int> ans;
        vector<bool> dp(V,true);
        for(int i=0;i<V;i++)
        {
            if(adj[i].size()>0)
            {
                q.push(i);
                dp[i]=false;
                break;
            }
        }
        // for(int i=0;i<V;i++)
        // {
        //     for(auto j: adj[i])
        //     cout<<j<<" ";
        //     cout<<endl;
        // }
        while(!q.empty())
        {
            int a=q.front();
            q.pop();
            ans.push_back(a);
            for(auto j:adj[a])
            {
                if(dp[j])
                {
                  q.push(j);
                  dp[j]=false;
                }
                
            }
            
        }
        
        return ans;
    }
};

//{ Driver Code Starts.
int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int V, E;
        cin >> V >>

            E;

        vector<int> adj[V];

        for (int i = 0; i < E; i++) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
            // 		adj[v].push_back(u);
        }
        // string s1;
        // cin>>s1;
        Solution obj;
        vector<int> ans = obj.bfsOfGraph(V, adj);
        for (int i = 0; i < ans.size(); i++) {
            cout << ans[i] << " ";
        }
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends
