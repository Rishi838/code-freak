#include<bits/stdc++.h>
using namespace std;
 bool isSubsequence(string s, string t) 
 {
     int a=s.length(),b=t.length();
      string dp[a+1][b+1];
        for(int i=0;i<=a;i++)
        {
            for(int j=0;j<=b;j++)
            {
                if(i==0 || j==0)
                {
                   dp[i][j]="";
                }
                else if(s[i-1]==t[j-1])
                {
                    dp[i][j]=dp[i-1][j-1] + s[i-1];
                }
                else
                {
                    dp[i][j]= dp[i-1][j].length() > dp[i][j-1].length() ? dp[i-1][j] : dp[i][j-1];
                }
            }
        }
        return s==dp[a][b];
    }
int main()
{
int n,b;
cin>>n>>b;
vector<string> vec(n); 
for(int i=0;i<n;i++)
{
    cin>>vec[i];
    continue;
}
    string t;
    while(b--)
    {
        char ch;
        cin>>ch;
        int a=t.size()-1,c=0;
        if(ch=='-')
        t.replace(a,1,"");
        else
        t+=ch;
        for(auto i:vec)
        {
            if(isSubsequence(t,i))
            c++;
        }
        cout<<c<<endl;
    }
	return 0;
}
