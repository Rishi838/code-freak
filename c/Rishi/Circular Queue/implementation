//Circular queue
#include <stdio.h>
#include <stdlib.h>

struct queue
{
    int size, f, b, *arr;
};

void enqueue(struct queue *q, int val)
{
    if ((q->b + 1) % q->size == q->f)
    {
        printf("Queue Overflow");
    }
    else
    {
        q->b = (q->b + 1) % q->size;
        q->arr[q->b] = val;
    }
}

int dequeue(struct queue *q)
{
    if (q->f == q->b)
    {
        printf("Queue Undeflow");
        return -1;
    }
    else
    {
        q->f = (q->f + 1) % q->size;
        int val = q->arr[q->f];
        return val;
    }
}
void display(struct queue *q)
{
    for (int i = q->f + 1; i <= q->b; i++)
    {
        printf("%d  ", q->arr[i]);
    }
    printf("\n");
}
int main()
{
    struct queue *q = (struct queue *)malloc(sizeof(struct queue));
    q->size = 10;
    q->f = q->b = -1;
    q->arr = (int *)malloc(q->size * sizeof(int));
    enqueue(q, 10);
    display(q);
    enqueue(q, 20);
    display(q);
    dequeue(q);
    display(q);
    dequeue(q);
    display(q);
    dequeue(q);
}
