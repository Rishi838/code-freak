//Searching in a binary search tree
#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *left;
    struct node *right;
};

struct node *create_node(int data)
{
    struct node *n = (struct node *)malloc(sizeof(struct node));
    n->data = data;
    n->left = NULL;
    n->right = NULL;
}

struct node *searchITER(struct node *head, int key)
{
    while (head != NULL)
    {

        if (head->data == key)
        {
            return head;
        }
        else if (head->data > key)
        {
            head = head->left;
        }
        else
        {
            head = head->right;
        }
    }
    return NULL;
}

int main()
{
    struct node *p1 = create_node(5);
    struct node *p2 = create_node(3);
    struct node *p3 = create_node(6); // This is a binary search tree which i have created
    struct node *p4 = create_node(1);
    struct node *p5 = create_node(4);

    p1->left = p2;
    p1->right = p3;
    p2->left = p4;
    p2->right = p5;

    struct node *ptr = searchITER(p1, 5);
    if (ptr != NULL)
    {
        printf("found: %d", ptr->data);
    }
    else
        printf("ELement not found");

    return 0;
}
