#include <iostream>
#include <vector>
using namespace std;

void heapify(vector<int> &vec, int n, int i)
{
    int largest = i, l = 2 * i + 1, r = 2 * i + 2;
    if (l < n && vec[l] > vec[largest])
    {
        largest = l;
    }
    if (r < n && vec[r] > vec[largest])
    {
        largest = r;
    }
    if (largest != i)
    {
        swap(vec[largest], vec[i]);
        heapify(vec, n, largest);
    }
}

void heap_sort(vector<int> &vec, int n)
{
    for (int i = (n / 2)-1; i >= 0; i--)
    { //THis is to make a max heap
        heapify(vec, n, i);
    }
   
}

int main()
{
    vector<int> vec = {1,2,3,4,5,6,7,8,9};
    heap_sort(vec, vec.size());
    for (int i = 0; i < vec.size(); i++)
    {
        cout << vec[i] << " ";
    }

    return 0;
}
