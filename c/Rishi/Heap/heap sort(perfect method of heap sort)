#include <iostream>
#include <vector>
using namespace std;

void heapify(vector<int> &vec, int n, int i)
{
    int largest = i, l = 2 * i + 1, r = 2 * i + 2;
    if (l < n && vec[l] > vec[largest])
    {
        largest = l;
    }
    if (r < n && vec[r] > vec[largest])
    {
        largest = r;
    }
    if (largest != i)
    {
        swap(vec[largest], vec[i]);
        heapify(vec, n, largest);
    }
}

void heap_sort(vector<int> &vec, int n)
{
    for (int i = (n / 2)-1; i >= 0; i--)
    { //THis is to make a max heap
        heapify(vec, n, i);
    }
    //This is to sort a heap
    for (int i = n - 1; i >= 0; i--)
    {
        swap(vec[0], vec[i]);
        heapify(vec, i, 0);
    }
}

int main()
{
    vector<int> vec = {50, 15, 35, 33, 16, 25, 34, 12};
    heap_sort(vec, vec.size());
    for (int i = 0; i < vec.size(); i++)
    {
        cout << vec[i] << " ";
    }

 return 0;
 }
