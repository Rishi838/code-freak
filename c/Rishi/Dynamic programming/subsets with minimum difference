#include <bits/stdc++.h>
using namespace std;

int subset(int arr[], int n, int sum)
{
    bool dp[n + 1][sum + 1];
    for (int i = 0; i <= n; i++)
        dp[i][0] = true;
    for (int i = 1; i <= sum; i++)
        dp[0][i] = false;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= sum; j++)
        {
            if (arr[i - 1] > j)
            {
                dp[i][j] = dp[i - 1][j];
            }
            else
            {
                dp[i][j] = dp[i - 1][j] || dp[i - 1][j - arr[i - 1]];
            }
        }
    }
    int diff=INT16_MAX;
    for(int i=0;i<=sum/2;i++)
    {
        if(dp[n][i]==true)
        {
            diff=min(diff,abs(sum-2*i));
        }
    }
    return diff;
}

int main()
{
    int arr[] = {2, 4, 2,3};
    int n = sizeof(arr) / sizeof(int);
    int sum=0;
   for(auto i :arr)
    sum+=i;
    cout<<subset(arr,n,sum);
     return 0;
}
