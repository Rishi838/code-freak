#include <bits/stdc++.h>
using namespace std;

void subset(int arr[], int n, int sum, int diff)
{
    int dp[n + 1][sum + 1];
    for (int i = 0; i <= n; i++)
        dp[i][0] = 1;
    for (int i = 1; i <= sum; i++)
        dp[0][i] = 0;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= sum; j++)
        {
            if (arr[i - 1] > j)
            {
                dp[i][j] = dp[i - 1][j];
            }
            else
            {
                dp[i][j] = dp[i - 1][j] + dp[i - 1][j - arr[i - 1]];
            }
        }
    }
    int count = 0;
    for (int i = 0; i <= sum / 2; i++)
    {
        if (dp[n][i] && abs(sum - i - i) == diff)
        {
            count += dp[n][i];
        }
    }
    cout << count;
}

int main()
{
    int arr[] = {1, 2, 3, 4, 5, 8}, diff = 3;
    int n = sizeof(arr) / sizeof(int);
    int sum = 0;
    for (auto i : arr)
        sum += i;
    subset(arr, n, sum, diff);
    return 0;
}
