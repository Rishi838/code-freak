class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
              int ans = INT16_MIN;
               int p = matrix.size(), q = matrix[0].size();
               vector<vector<int>> dp(p, vector<int>(q));
             for (int i = 0; i < p; i++)
               {
                     for (int j = 0; j < q; j++)
                     {
                       if (i == 0 || j == 0)
                       {
                           if(matrix[i][j]=='0')
                              dp[i][j] =0;
                           else
                               dp[i][j]=1;
                       }
                      else if (matrix[i][j] == '0')
                        dp[i][j] = 0;
                        else
                        {
                         if (matrix[i - 1][j] == '1' && matrix[i - 1][j - 1] == '1' && matrix[i][j - 1] == '1')
                         { int a=dp[i-1][j-1],b=dp[i-1][j],c=dp[i][j-1];
                            dp[i][j]=min(a,min(b,c)) + 1;
                          }
                         else
                         dp[i][j] = 1;
                        }
                        ans=max(ans,dp[i][j]);
                        
                     }
              }
        return ans*ans;
    }
};
