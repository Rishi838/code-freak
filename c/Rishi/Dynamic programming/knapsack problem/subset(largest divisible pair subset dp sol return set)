class Solution {
public:
    
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>> dp(nums.size());
        for(int i=0;i<nums.size();i++)
        {
            dp[i].push_back(nums[i]);
        }
        for(int i=0;i<nums.size();i++)
        {
            for(int j=0;j<i;j++)
            {
                if(nums[i] % nums[j]==0 && dp[j].size()>=dp[i].size())
                {
                    dp[i]=dp[j];
                    dp[i].push_back(nums[i]);
                }
            }
        }
        int a=INT_MIN;
        vector<int> b;
        for(int i=0;i<nums.size();i++)
        {
            int c=dp[i].size();
          if(c>a)
          {
              a=c;
              b=dp[i];
          }
        }
       return b;
    }
};
