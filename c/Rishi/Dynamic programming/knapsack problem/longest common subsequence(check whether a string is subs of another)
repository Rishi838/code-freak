Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

 

Example 1:

Input: s = "abc", t = "ahbgdc"
Output: true
Example 2:

Input: s = "axc", t = "ahbgdc"
Output: false


class Solution {
public:
    bool isSubsequence(string s, string t) {
      string dp[s.length()+1][t.length()+1];
        for(int i=0;i<=s.length();i++)
        {
            for(int j=0;j<=t.length();j++)
            {
                if(i==0 || j==0)
                {
                   dp[i][j]="";
                }
                else if(s[i-1]==t[j-1])
                {
                    dp[i][j]=dp[i-1][j-1] + s[i-1];
                }
                else
                {
                    dp[i][j]= dp[i-1][j].length() > dp[i][j-1].length() ? dp[i-1][j] : dp[i][j-1];
                }
            }
        }
        return s==dp[s.length()][t.length()];
    }
};
