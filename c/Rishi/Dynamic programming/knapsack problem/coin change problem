Given a value N, if we want to make change for N cents, and we have infinite supply of each of S = { S1, S2, .. , Sm} valued coins, how many ways can we make the change? 
The order of coins doesnâ€™t matter.
For example, for N = 4 and S = {1,2,3}, there are four solutions: {1,1,1,1},{1,1,2},{2,2},{1,3}. So output should be 4. For N = 10 and S = {2, 5, 3, 6}, 
there are five solutions: {2,2,2,2,2}, {2,2,3,3}, {2,2,6}, {2,3,5} and {5,5}. So the output should be 5
.

#include<bits/stdc++.h>
using namespace std;
int main()
{
  int n=10;
  int arr[]={2,5,3,6},v=sizeof(arr)/sizeof(int);
  int dp[v+1][n+1];
  for(int i=0;i<=v;i++)
  {
    for(int j=0;j<=n;j++)
    {
      if(j==0)
      dp[i][j]=1;
      else if(i==0)
      dp[i][j]=0;
      else if(arr[i-1] > j)
      dp[i][j]=dp[i-1][j];
      else
      dp[i][j]= dp[i-1][j] + dp[i][j-arr[i-1]];
      cout<<dp[i][j]<<" ";
    }
    cout<<endl;
  }
  return 0;
}
