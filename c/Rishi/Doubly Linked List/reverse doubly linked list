//Reverse a doubly linked list
#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *prev;
    struct node *next;
};

void addition(struct node **head, int data)
{
    struct node *ptr = (struct node *)malloc(sizeof(struct node));
    ptr->data = data;
    if (*head == NULL)
    {
        ptr->prev = NULL;
        ptr->next = NULL;
        *head = ptr;
    }
    else
    {
        struct node *p = *head;
        while (p->next != NULL)
        {
            p = p->next;
        }
        p->next = ptr;
        ptr->prev = p;
        ptr->next = NULL;
    }
}

struct node*reverse_list(struct node *head)
{
    struct node *temp=NULL,*current=head;
   while (current != NULL)
    {
        temp = current->prev;
        current->prev = current->next;
        current->next = temp;            
        current = current->prev;
    }
     
    if(temp != NULL )
        head = temp->prev;
        return head;
}
void display(struct node *head)
{
    struct node *ptr = head;
    while (ptr != NULL)
    {
        printf("%d  ", ptr->data);
        ptr = ptr->next;
    }
}

int main()
{
    int n, a;
    printf("Enter number of elements: ");
    scanf("%d", &n);
    struct node *head = NULL;
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &a);
        addition(&head, a);
    }
    display(head);
    head=reverse_list(head);
    display(head);

    return 0;
}
