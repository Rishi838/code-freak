//Finding inorder succesor
#include <iostream>
using namespace std;

class Node
{
public:
    int data;
    Node *left;
    Node *right;
    Node(int value)
    {
        data = value;
        left = NULL;
        right = NULL;
    }
};

int search(int in[], int min, int max, int val)
{
    for (int i = min; i <= max; i++)
    {
        if (val == in[i])
        {
            return i;
        }
    }
    return -1;
}

Node *create_node(int pre[], int in[], int min, int max)
{
    static int idx = 0;
    if (min > max)
    {
        return NULL;
    }

    int a = pre[idx];
    idx++;
    Node *root = new Node(a);
    if (min == max)
    {
        return root;
    }
    int pos = search(in, min, max, a);
    root->left = create_node(pre, in, min, pos - 1);
    root->right = create_node(pre, in, pos + 1, max);
    return root;
}

void preorder(Node *root)
{
    if (root==NULL)
    {
        return;
    }
    preorder(root->left);
    preorder(root->right);
      cout<<root->data<<" ";
}

int main()
{
    int in[] = {4, 2, 5, 1, 3, 6};
    int pre[] = {1, 2, 4, 5, 3, 6};
    Node *root = create_node(pre, in, 0, 5);
    preorder(root);
    return 0;
}
