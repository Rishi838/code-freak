/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans=INT_MIN;
    int sum(TreeNode *root)
    {
       if(root==NULL)
           return INT_MIN;
        if(root->left==NULL && root->right==NULL)
        {
            ans=max(ans,root->val);
            return root->val;
        }
        int temp=root->val;
        int left=sum(root->left);
        int right=sum(root->right),add;
        if(left==INT_MIN || right==INT_MIN)
            add=(left==INT_MIN)?right:left;
        else
            add=max(left,max(right,left+right));
        int check=max(left,right);
        if(check<0)
        {
            ans=max(ans,temp);
            return temp;
        }
        else
        {
            ans=max(ans,add+ temp);
           ans=max(ans,check);
            return check + temp;
        }   
        
    }
    
    int maxPathSum(TreeNode* root) {
        sum(root);
        return ans;
    }
};
