//Given a Binary Tree, print the nodes level-wise, each level on a new line. 
#include <iostream>
#include<queue>
using namespace std;

class Node
{
public:
    int data;
    Node *left, *right;
    Node(int value)
    {
        data = value;
        left = right = NULL;
    }
};


void level_order(Node *root)
{
    if (root==NULL)
    {
        return;
    }
    queue<Node*> q;
    q.push(root);
    q.push(NULL);
    while (!q.empty())
    {
        Node *temp=q.front();
        q.pop();
        if (temp!=NULL)
        {
            cout<<temp->data<<" ";
            if (temp->left!=NULL)
            {
                q.push(temp->left);
            }
             if (temp->right!=NULL)
            {
                q.push(temp->right);
            }
            
        }
        else if(!q.empty() && temp==NULL)
        {
            q.push(NULL);
            cout<<endl;
        }
        
    }
    
    
}


int main()
{
    Node *root = new Node(1);
    root->left = new Node(2);
    root->left->left = new Node(4);
    root->left->left->left = new Node(8);
    root->left->left->right = new Node(9);
    root->left->right = new Node(5);
    root->left->right->left = new Node(10);
    root->left->right->right = new Node(11);
    root->right = new Node(3);
    root->right->left = new Node(6);
    root->right->left->left = new Node(12);
    root->right->left->right = new Node(13);
    root->right->right = new Node(7);
    root->right->right->left = new Node(14);
    root->right->right->right = new Node(15);
    level_order(root);
    return 0;
}
