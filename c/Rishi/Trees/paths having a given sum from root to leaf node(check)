/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
   bool solve(TreeNode*root,int target,int& sum)
   {
       if(root->left==NULL && root->right==NULL)
       {
             if(target==sum+root->val)
             {
                 return true;
             }
           return false;
       }
       sum+=root->val;
       if(root->left && solve(root->left,target,sum))
       {
           return true;
       }
       if(root->right && solve(root->right,target,sum))
       {
         return true;
       }
       sum=sum-root->val;
       return false;
   }
    
    bool hasPathSum(TreeNode* root, int targetSum) {
        int sum=0;
        if(root==NULL)
        {
         return false;
        }
        return solve(root,targetSum,sum);
    }
};
