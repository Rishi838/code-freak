/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        int a=500;
        if(list1 && list2)
        {
            a=min(list1->val,list2->val);
            if(a==list1->val)
                list1=list1->next;
            else
                list2=list2->next;
        }
        else if(list1)
        {
            a = list1->val;
            list1=list1->next;
        }
        else if(list2)
        {
            a = list2->val;
            list2=list2->next;
        }
        else
            return NULL;
        ListNode *l =new ListNode(a),*t=l;
        while(list1 || list2)
        {
            if(list1 && list2)
        {
             
            a=min(list1->val,list2->val);
            if(a==list1->val)
                list1=list1->next;
            else
                list2=list2->next;
        }
        else if(list1)
        {
            a = list1->val;
            list1=list1->next;
        }
        else if(list2)
        {
            a = list2->val;
            list2=list2->next;
            
        }
        else
            break;
            t->next= new ListNode(a);
            t=t->next;
        }
        return l;
    }
};
