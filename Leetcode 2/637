/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   void func(vector<double> &v,TreeNode *root)
   {
       queue<TreeNode*> q;
       q.push(root);
       q.push(NULL);
       while(!q.empty() && q.front()!=NULL)
       {
           double sum=0;
           int i=0;
           while(!q.empty() && q.front()!=NULL)
           {
               i++;
               sum+=q.front()->val;
               if(q.front()->left!=NULL)
                   q.push(q.front()->left);
               if(q.front()->right!=NULL)
                   q.push(q.front()->right);
               q.pop();
           }
           q.pop();
           q.push(NULL);
           v.push_back(sum/i);
       }
   }
    vector<double> averageOfLevels(TreeNode* root) {
     vector<double> v;
        func(v,root);
        return v;
    }
};
