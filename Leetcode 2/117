/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
          queue<Node*> q;
        if(root==NULL)
        return NULL;
        q.push(root);
        q.push(NULL);
        while(!q.empty())
        {
            while(q.front()!=NULL)
            {
                Node *a=q.front();
                if(a->left!=NULL)
                    q.push(a->left);
                if(a->right!=NULL)
                    q.push(a->right);    
                q.pop();
                a->next=q.front();
            }
            q.pop();
            if(!q.empty())
            q.push(NULL);
        }
        return root;
    }
};
