/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int func(TreeNode *root,int &sum)
    {
        if(root==NULL)
            return 0;
        int a=func(root->left,sum);
        if(root->left!=NULL)
            a+=root->left->val;
        int b=func(root->right,sum);
        if(root->right!=NULL)
            b+=root->right->val;
        cout<<a<<" "<<b<<" ";
         if(root->left!=NULL)
            cout<<root->left->val<<" H ";
         if(root->right!=NULL)
             cout<<root->right->val;
        cout<<" "<<abs(a-b)<<endl;
        sum +=abs(a-b);
        return a+b;
    }
    int findTilt(TreeNode* root) {
        int sum=0;
        func(root,sum);
        return sum;
    }
};
