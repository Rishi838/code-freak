/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(vector<int> &v,TreeNode *root){
        if(root==NULL)
            return;
        inorder(v,root->left);
        v.push_back(root->val);
        inorder(v,root->right);
    }
    TreeNode *func(vector<int>&v,int i,int j)
    {
        if(i>j)
            return NULL;
        else if(i==j)
            return new TreeNode(v[i]);
        int mid= (i+j)/2;
        TreeNode *ans = new TreeNode(v[mid]);
        ans->left = func(v,i,mid-1);
        ans->right = func(v,mid+1,j);
        return ans;
    }
    TreeNode* balanceBST(TreeNode* root) {
        vector<int> v;
        inorder(v,root);
        return func(v,0,v.size()-1);
        
    }
};
