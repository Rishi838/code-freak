/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        int c=1,a,ans=INT_MIN;
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        while(!q.empty())
        {
            int sum=0;
            while(q.front()!=NULL)
            {
                sum+=q.front()->val;
                if(q.front()->left!=NULL)
                q.push(q.front()->left);
                 if(q.front()->right!=NULL)
                q.push(q.front()->right);
                q.pop();
            }
            cout<<sum<<" "<<c;
            if(sum > ans)
            {
                ans=sum;
                a=c;
            }
            q.pop();
            if(!q.empty())
            q.push(NULL);
         c++;
        }
        return a;

    }
};
