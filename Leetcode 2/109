/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
     TreeNode *make_bst(int low,int high,vector<int>&nums)
    {
        if(low>high)
         return NULL;
       int mid=(low+high)/2;
        TreeNode *root=new TreeNode;
        root->val=nums[mid];
        root->left=make_bst(low,mid-1,nums);
        root->right=make_bst(mid+1,high,nums);
        return root;
    }

    TreeNode* sortedListToBST(ListNode* head) {
        vector<int> v;
        while(head)
        {
            v.push_back(head->val);
            head=head->next;
        }
        return make_bst(0,v.size()-1,v);
    }
};
