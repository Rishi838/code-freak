/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void func(TreeNode *root,string &ans,string a)
    {
        if(root==NULL)
            return;
        if(root->left==NULL && root->right==NULL)
        {
             char p=root->val+97;
            a= p + a;
            if(ans=="")
            ans=a;
            else
            {
                int c=ans.compare(a);
                if(c>0)
                ans=a;
            }
            return;
        }
        char p=root->val+97;
        string st= p + a;
        // cout<<st<<endl;
        func(root->left,ans,st);
        func(root->right,ans,st);
    }
    string smallestFromLeaf(TreeNode* root) {
        string s;
        func(root,s,"");
        return s;
    }
};
