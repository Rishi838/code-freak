/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<int> nodesBetweenCriticalPoints(ListNode* head) {
        vector<int> v,ans;
        int a=1,b=head->val;
        head=head->next;
        while(head)
        {
          
           if(head->next==NULL)
               break;
            if(b < head->val && head->val > head->next->val)
                v.push_back(a);
            if(b > head->val && head->val < head->next->val)
                v.push_back(a);
            b=head->val;
            head=head->next;
            a++;
        }
        if(v.size()<2)
        {
            ans.push_back(-1);
            ans.push_back(-1);
        }
        else
        {
            int a=INT_MAX;
            for(int i=1;i<v.size();i++)
                a=min(a,v[i] - v[i-1]);
            ans.push_back(a);
            ans.push_back(v[v.size()-1]-v[0]);

        }
        return ans;
        
    }
};
