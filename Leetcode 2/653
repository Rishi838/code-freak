/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   bool search(TreeNode *r,int k)
   {
       if(r==NULL)
           return false;
       if(r->val==k)
           return true;
       return search(r->left,k) || search(r->right,k);
   }
     bool func(TreeNode* root, int k,TreeNode *h) {
        if(root==NULL)
            return false;
        if(k!=2*root->val && search(h,k - root->val))
           return true;
         return func(root->left,k,h) || func(root->right,k,h);
           }
    bool findTarget(TreeNode* root, int k) {
        return func(root,k,root);
    }
};
