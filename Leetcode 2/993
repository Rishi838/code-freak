/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void depth(TreeNode *root,int x,int &c,int d,TreeNode **ans,TreeNode*r)
    {
        if(root==NULL)
            return;
        if(root->val==x)
        {
            *ans=r;
            c=d;
            return;
        } 
        depth(root->left,x,c,d+1,ans,root);
            depth(root->right,x,c,d+1,ans,root);
    }
    bool isCousins(TreeNode* root, int x, int y) {
        int c=0,d=0;
        TreeNode *a,*b;
        depth(root,x,c,0,&a,root);
        depth(root,y,d,0,&b,root);
        if(c!=d)
            return false;
        if(a!=b)
        return true;
        return false;
    }
};
