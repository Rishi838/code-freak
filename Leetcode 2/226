/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode *func(TreeNode *root)
    {
        if(root==NULL)
            return NULL;
        TreeNode *ptr=new TreeNode(root->val);
        if(root->right != NULL)
        {
            ptr->left=func(root->right);
        }
        if(root->left !=NULL)
        {
            ptr->right = func(root->left);
        }
        return ptr;
    }
    TreeNode* invertTree(TreeNode* root) {
        TreeNode *ptr=new TreeNode();
        return func(root);
    }
};
