/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode *func(vector<int> nums,int i,int j)
    {
        if(i>j)
        return NULL;
        else if(i==j)
        {
            return new TreeNode(nums[i]);
        }
        int ans=INT_MIN,a;
        for(int b=i;b<=j;b++)
        {
            if(nums[b] > ans)
            {
                ans =nums[b];
                a=b;
            }
        }
        TreeNode *r = new TreeNode(ans);
        r->left = func(nums,i,a-1);
        r->right = func(nums,a+1,j);
        return r;
    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return func(nums,0,nums.size()-1);
    }
};
