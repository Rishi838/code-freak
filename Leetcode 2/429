/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    void func(vector<vector<int>> &v,Node *root)
    {
        queue<Node*> q,p;
        q.push(root);
        q.push(NULL);
        while(!q.empty() && q.front()!=NULL)
        {
            vector<int> vec;
           while(!q.empty() && q.front()!=NULL)
           {
               vec.push_back(q.front()->val);
               for(auto i: q.front()->children)
               if(i!=NULL)
                   q.push(i);
               q.pop();
           }
            q.pop();
            p=q;
               q.push(NULL);
            v.push_back(vec);
            // break;
        }
    }
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> v;
        func(v,root);
        return v;
    }
};
