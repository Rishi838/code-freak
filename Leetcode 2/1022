/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void func(TreeNode *root,int &sum,string t)
    {
        if(root==NULL)
            return;
        t+=to_string(root->val);
        if(root->left==NULL && root->right==NULL)
        {
            cout<<t<<" "<<stoi(t,0,2)<<endl;
         sum += stoi(t, 0, 2);
            return;
        }
        
        func(root->left,sum,t);
         func(root->right,sum,t);
    }
    int sumRootToLeaf(TreeNode* root) {
        int sum=0;
        func(root,sum,"");
        return sum;
    }
};
