/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        queue<TreeNode *>q;
        q.push(root);
        q.push(NULL);
        int c=0;
        while(!q.empty())
        {
            if(c%2==0)
            {
                int d=INT_MIN;
                while(q.front()!=NULL)
                {
                    if(!(q.front()->val%2 && q.front()->val>d))
                    return false;
                    d=q.front()->val;
                    if(q.front()->left!=NULL)
                    q.push(q.front()->left);
                    if(q.front()->right!=NULL)
                    q.push(q.front()->right);
                    q.pop();
                }
            }
            else
            {
                  int d=INT_MAX;
                while(q.front()!=NULL)
                {
                    if(!(q.front()->val%2==0 && q.front()->val<d))
                    return false;
                    d=q.front()->val;
                    if(q.front()->left!=NULL)
                    q.push(q.front()->left);
                    if(q.front()->right!=NULL)
                    q.push(q.front()->right);
                    q.pop();
                }
            }
            q.pop();
            if(!q.empty())
            q.push(NULL);
           c++;
        }
        return true;
    }
};
