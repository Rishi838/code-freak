/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    map<pair<TreeNode*,bool>,int> m;
    int func(TreeNode *root,bool flag)
    {
        if(root==NULL)
        return 0;
        if(m.find({root,flag}) != m.end())
        return m[{root,flag}];
        int a=0;
        int b =func(root->left,true) + func(root->right,true);
         m[{root,flag}] = b;
        if(flag)
        {
        a=  func(root->left,!flag) + func(root->right,!flag) + root->val;
        m[{root,flag}]=max(a,b);
        return max(a,b); 
        }
        return b;
    }
    int rob(TreeNode* root) {
       return func(root,true);
    }
};
