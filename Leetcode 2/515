/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
       queue<TreeNode *> q;
       q.push(root);
       q.push(NULL);
       vector<int> v;
        if(root==NULL)
        return v;
       int c=INT_MIN;
       while(!q.empty())
       { 
           int c=INT_MIN;
           while(q.front()!=NULL)
           {
               if(q.front()->left!=NULL)
               q.push(q.front()->left);
               if(q.front()->right!=NULL)
                q.push(q.front()->right);
                c=max(c,q.front()->val);
                q.pop();  
           }
           q.pop();
           v.push_back(c);
           if(!q.empty())
           q.push(NULL);
       }
       return v;

    }
};
