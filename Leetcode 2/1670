class FrontMiddleBackQueue {
public:
    deque<int> dq;
    FrontMiddleBackQueue() {
        
    }
    
    void pushFront(int val) {
        dq.push_front(val);
    }
    
    void pushMiddle(int val) {
        int b=dq.size()/2;
        deque<int> a(dq.begin(),dq.begin() + b);
        a.push_back(val);
        for(int i=b;i<dq.size();i++)
            a.push_back(dq[i]);
        dq=a;
    }
    
    void pushBack(int val) {
                dq.push_back(val);
    }
    
    int popFront() {
        if(dq.size()==0)
            return -1;
        int a=dq.front();
        dq.pop_front();
        return a;
    }
    
    int popMiddle() {
        if(dq.size()==0)
        return -1;
        int b;
        deque<int> a;
        for(int i=0;i<dq.size();i++)
        {
            if(i!=(dq.size()-1)/2)
                a.push_back(dq[i]);
            else
                b=dq[i];
        }
        dq=a;
        return b;
    }
    
    int popBack() {
         if(dq.size()==0)
            return -1;
        int a=dq.back();
        dq.pop_back();
        return a;
    }
};

/**
 * Your FrontMiddleBackQueue object will be instantiated and called as such:
 * FrontMiddleBackQueue* obj = new FrontMiddleBackQueue();
 * obj->pushFront(val);
 * obj->pushMiddle(val);
 * obj->pushBack(val);
 * int param_4 = obj->popFront();
 * int param_5 = obj->popMiddle();
 * int param_6 = obj->popBack();
 */
