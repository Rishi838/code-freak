class Solution {
public:
    int MAXN =1e9;

    int minScore(int n, vector<vector<int>>& roads) {
        priority_queue<pair<int,int>> pq;
        vector<int> dist(n,MAXN);
        vector<pair<int,int>> edges[n];
        for(vector<int>& x:roads){
            edges[x[0]-1].push_back({x[1]-1,x[2]});
            edges[x[1]-1].push_back({x[0]-1,x[2]});
        }
        dist[0]=MAXN;
        pq.push({-MAXN,0});
        while(!pq.empty()){
            pair<int,int> v=pq.top();
            pq.pop();
            int u=v.second;
            int d=-v.first;
            for(pair<int,int> e:edges[u]){
                if(dist[e.first]>min(d,e.second)){
                    dist[e.first]=min(d,e.second);
                    pq.push({-dist[e.first],e.first});
                }
            }
        }
        return dist[n-1];
    }
};
