class DataStream {
public:
   map<int,int> m;
   deque<int> dq;
   int a,b;
    DataStream(int value, int k) {
        a=value;
        b=k;
    }
    
    bool consec(int num) {
        if(dq.size()==b)
        {
            cout<<'a';
          int p=dq.front();
          dq.pop_front();
          m[p]--;
          dq.push_back(num);
          m[num]++;
          if(dq.size()==b)
            {
                if(m[a]==b)
                return true;
                else
                return false;
            }
        }
        else
        {
            cout<<'b';
            m[num]++;
            dq.push_back(num);
            if(dq.size()==b)
            {
                if(m[a]==b)
                return true;
            }
            return false;
        }
        return 0;
    }
};

/**
 * Your DataStream object will be instantiated and called as such:
 * DataStream* obj = new DataStream(value, k);
 * bool param_1 = obj->consec(num);
 */
