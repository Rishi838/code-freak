/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode *func(TreeNode *r1,TreeNode *r2)
    {
        if(r1==NULL && r2==NULL)
            return NULL;
        else if(r2==NULL)
        {
            return r1;
        }
        else if(r1==NULL)
        {
            return r2;
        }
        TreeNode *r =new TreeNode(r1->val + r2->val);
        r->left = func(r1->left,r2->left);
        r->right = func(r1->right,r2->right);
        return r;   
            
    }
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        return func(root1,root2);
    }
};
