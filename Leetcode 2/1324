class Solution {
public:
    // trim from right
 string rtrim(string s, const char* t = " \t\n\r\f\v")
{
    s.erase(s.find_last_not_of(t) + 1);
    return s;
}
    vector<string> printVertically(string s){ 
        vector<string> vec;
        string a;
        int x=INT_MIN;
        for(auto i:s)
        {
            if(i==' ')
            {
                vec.push_back(a);
                // cout<<a.length()<<" "<<x<<" "<<(a.length()>x)<<endl;
                int b=a.length();
                if(b > x)
                x=a.length();
                a="";
            }
            else
            a+=i;
        }
        int b=a.length();
        if(b > x)
        x=a.length();
        vec.push_back(a);
        vector<string> v(x);
        for(int i=0;i<x;i++)
        {
            string z;
            for(int j=0;j<vec.size();j++)
            {
                if(i>=vec[j].length())
                z+=" ";
                else
                z+=vec[j][i];
            }
            v[i]=rtrim(z);
        }
        return v;
    }
};
