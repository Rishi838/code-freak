/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
  TreeNode *func(vector<int> p,int i,int j)
  {
     if(i>j)
     return NULL;
     if(i==j)
     return new TreeNode(p[i]);
     int a=i,b=p[i];
     for(;a<=j;a++)
     {
         if(p[a] > b)
         break;
     }
     TreeNode *r = new TreeNode(p[i]);
     r->left = func(p,i+1,a-1);
     r->right = func(p,a,j);
     return r;
  }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        return func(preorder,0,preorder.size()-1);
    }
};
