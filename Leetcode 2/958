/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCompleteTree(TreeNode* root) {
       queue<TreeNode *> q;
       q.push(root);
       q.push(NULL);
        bool flag=false;
       while(!q.empty())
       {
          while(q.front()!=NULL)
          {
              cout<<q.front()->val<<" ";
              if(q.front()->left==NULL)
              {
                 flag=true;
              }
              else
              {
                if(flag)
                return false;
                q.push(q.front()->left);
              }
              if(q.front()->right==NULL)
              {
                 flag=true;
              }
              else
              {
                if(flag)
                return false;
                q.push(q.front()->right);
              }
              q.pop();
          }
          cout<<endl;
          q.pop();
          if(!q.empty())
          q.push(NULL);
       } 
       return true;

    }
};
