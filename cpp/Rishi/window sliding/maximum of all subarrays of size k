// Sliding Window Maximum (Maximum of all subarrays of size k)
#include<iostream>
#include<queue>
using namespace std;

int main()
{
    int arr[] = {1, 4, 2, 10, 23, 3, 1, 0, 20};
    int k=4;
  deque<int> q;
    for(int i=0;i<k;i++)
    {
       while(!q.empty() && arr[i]>=arr[q.back()])
       {
           q.pop_back();
       }
       q.push_back(i);
    }
    for (int i = k; i < 10; i++)
    {
       cout<<arr[q.front()]<<endl;
       while (!q.empty() && q.front() <= i-k)
       {
           q.pop_front();
       }
       while (!q.empty() && arr[i] >= arr[q.back()])
       {
           q.pop_back();
       }
       q.push_back(i);
    } 
    return 0;
}
