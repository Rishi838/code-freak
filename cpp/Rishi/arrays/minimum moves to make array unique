You are given an integer array nums. In one move, you can pick an index i where 0 <= i < nums.length and increment nums[i] by 1.

Return the minimum number of moves to make every value in nums unique.

 

Example 1:

Input: nums = [1,2,2]
Output: 1
Explanation: After 1 move, the array could be [1, 2, 3].




class Solution {
public:    
    int minIncrementForUnique(vector<int>& nums) {
        int count=0;
        map<int,int> m;
        for(auto i: nums)
            m[i]++;
        for(auto i: m)
        {
            // cout<<i.first<<" "<<i.second<<endl;
            if(i.second>1)
            {
                count+=i.second-1;
                m[i.first+1]+=i.second-1;
            }
            // cout<<i.first+1<"  "<<i.second-1 
        }
        return count;
    }
};
