/*
Given a string of lowercase letters in the range ascii[a-z], determine the index of a character that can be removed to make the string a palindrome. There may be more than one 
solution, but any will do. If the word is already a palindrome or there is no solution, return -1. Otherwise, return the index of a character to remove.
*/


#include <iostream>
#include <string>
using namespace std;
int main()
{
    int q;
    cin >> q;
    for (int i = 0; i < q; i++)
    {
        string s;
        cin >> s;
        int counter = -1;
        for (int j = 0; j < s.length(); j++)
        {
            string s2 = s.substr(j, 1);
            s.substr(j, 1);
            bool flag = true;
            for (int k = 0; k < s.length(); k++)
            {
                if (s.at(k) != s.at(s.length() - 1 - k))
                {
                    flag = false;
                    break;
                }
            }
            s.insert(j, s2);
            if (flag)
            {
                counter = j;
            }
        }
        cout << counter << endl;
    }

    return 0;
}
